---
title: "preanalysis"
format: html
editor: visual
---

```{r}
pacman::p_load(tidyverse, psych, skimr, here, gmodels, doSPSS, car, effectsize, boot, ez, patchwork)
Theme <- theme(axis.text.x = element_text(size = 20),
        axis.text.y = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20),
        legend.text = element_text(size = 20),
        legend.title = element_text(size = 20),
        title = element_text(size = 20)) 




                                        
long_data <- function(dv_1, dv_2, gap){
  
  First_meti <- Data_3 %>% 
  select(Q1, full_condition, measure = {{dv_1}}, Complaience, {{gap}}) %>% 
  mutate(who_IDK = if_else(grepl('DK', full_condition) == TRUE, 'Dr', 'Lay')

        , position_IDK = if_else((grepl('DKup', full_condition) == TRUE | grepl('Knowdown', full_condition) == TRUE | grepl('KnowDown', full_condition) == TRUE), 'first', 'second')
         , answer = if_else(position_IDK == 'first', 'IDK', 'Know')) 

Second_meti <- Data_3 %>% 
  select(Q1, full_condition, measure = {{dv_2}}, Complaience, {{gap}}) %>% 
  mutate(who_IDK = if_else(grepl('DK', full_condition) == TRUE, 'Dr', 'Lay')

        , position_IDK = if_else(grepl('DKup', full_condition) == TRUE | grepl('Knowdown', full_condition) == TRUE |  grepl('KnowDown', full_condition) == TRUE, 'first', 'second') 
         , answer = if_else(position_IDK == 'first', 'Know', 'IDK')) 



full_meti <- rbind(First_meti, Second_meti)
   
  
  # contrasts(full_meti$who_IDK)[1]   <- -1
  # contrasts(full_meti$position_IDK)[1] <- -1
  # contrasts(full_meti$measure_time)[1]     <- -1

  return(full_meti)
  
}



third_way_analysis <- function(data, title){
  
   new_data <- data %>% 
      select(who_IDK , position_IDK , answer, Q1, measure) %>% 
      mutate(dv_post = paste0(who_IDK, '_', position_IDK, '_', answer))
  
  
  sum <- new_data %>% 
    group_by(who_IDK, position_IDK, answer) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
  
  meti_1 <- ezANOVA(new_data, wid = Q1, between = .(who_IDK, position_IDK), within = .(answer), dv = measure, type = 3, white.adjust = FALSE)
  
  post <- pairwise.t.test(new_data$measure, new_data$dv_post, p.adjust.method = 'bonferroni')
  
  fig <-    new_data %>% 
  ggplot(aes(x = who_IDK, y = measure, fill = position_IDK)) +
   stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.2, linewidth = 1, position = position_dodge(0.9)) +
    stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    facet_wrap(~answer) +
# scale_fill_manual(values = c("grey", "green")) +
          theme_bw() +
            ggtitle(title) +
  Theme
  
  return(list(sum, meti_1, post, fig))

}



two_way_analysis_gap <- function(dv, title) {
  
  new_data <- Data_3 %>% 
    mutate(measure = {{dv}}) %>% 
    select(who_IDK, position_IDK, Q1, measure) %>% 
    mutate(dv_post = paste0(who_IDK, '_', position_IDK))
  
  sum <- new_data %>% 
    group_by(who_IDK, position_IDK) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
  
  meti_1 <- ezANOVA(new_data, wid = Q1, between = .(who_IDK, position_IDK), dv = measure, type = 3, white.adjust =       FALSE)
  
  post <- pairwise.t.test(new_data$measure, new_data$dv_post, p.adjust.method = 'bonferroni')
  
  fig <-    new_data %>% 
    mutate(`IDK reply order` = position_IDK
           , who_IDK = if_else(who_IDK == 'Dr', 'Physician', 'Layperson')) %>% 
  ggplot(aes(x = who_IDK, y = measure, fill = `IDK reply order` )) +
   stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.4, linewidth = 2, position = position_dodge(0.9)) +
    stat_summary(fun = mean, geom = "bar", alpha = 0.8, position = position_dodge(0.9)) +
     geom_point(aes(color = `IDK reply order`), position = position_jitterdodge(jitter.width = 0.2, jitter.height = 0), size = 1) +    scale_fill_manual(values =  c("grey30", "grey80")) +

      scale_color_manual(values = c("grey0", "grey0")) +  # Set the point colors to gray
    scale_fill_manual(values =  c("grey30", "grey80")) +
          theme_bw() + xlab('') + ylab('') + ggtitle(title) +
         theme(legend.position = "none") +

  Theme
  
  return(list(sum, meti_1, post, fig = fig))
  
}








one_sample_correc <- function(data, identity, position = NULL, interaction_type) {
  
  if (interaction_type == 'third') {
    
       n_comparisons = 4    
       adjust_p <- (0.05 / n_comparisons)
  
      model <- t.test(data[Data_3$who_IDK == identity & Data_3$position_IDK == position], mu = 0)
        size_dr = effectsize(model)
 #        p <- 
 # rstatix::t_test(formula = {{data}} ~ 1, mu = 0, data = Data_3[Data_3$who_IDK == identity, ]) 
 # rstatix::adjust_pvalue(method = "bonferroni")

    
  } else {
    
     n_comparisons = 2    
      adjust_p <- (0.05 / n_comparisons)
  
      model <- t.test(data[Data_3$who_IDK == identity], mu = 0)
    size_dr = effectsize(model)
    
      # p <- rstatix::t_test(formula = data[Data_3$who_IDK == identity] ~ 1, mu = 0, data = data) 
 # rstatix::adjust_pvalue(method = "bonferroni")
    
    
  }

  critical_p <- if_else(model$p.value < adjust_p, 'significant with adjustment', 'not significant')

  return(list(model = model, size_dr, critical_p))
}




two_way_within_anova_whoIDk <- function(data, gap) {
  
  data <- data %>% 
    mutate(gap_measure = {{gap}})
  
  STAS <- data %>% 
    group_by(who_IDK) %>% 
    summarise(round(mean_cl_normal(gap_measure), 2)
           , N = length(gap_measure))
  

  model_dr <- t.test(gap_measure ~ 1, data = data[data$who_IDK == 'Dr', ])
  sig_dr <- if_else(model_dr$p.value < c(0.05 / 2), 'Dr sig', NA)
  size_dr = effectsize(model_dr)
  model_lay <- t.test(gap_measure ~ 1, data = data[data$who_IDK == 'Lay', ])
  sig_lay <- if_else(model_lay$p.value < c(0.05 / 2), 'Lay sig', NA)
  size_lay = effectsize(model_lay)

FG <- data %>% 
    ggplot(aes(x = who_IDK, y = gap_measure)) +
    stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.2, linewidth = 1, position = position_dodge(0.9)) +
    stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
# scale_fill_manual(values = c("grey", "green")) +
          theme_bw() +
  Theme

return(list(STAS, model_dr, sig_dr, size_dr, model_lay, sig_lay, size_lay, FG))
  
  
}

two_way_within_anova_position <- function(data, gap) {
  
  data <- data %>% 
    mutate(gap_measure = {{gap}})
  
  STAS <- data %>% 
    group_by(position_IDK) %>% 
    summarise(round(mean_cl_normal(gap_measure), 2)
           , N = length(gap_measure))
  

  # model_dr <- t.test(gap_measure ~ 1, data = data[data$who_IDK == 'Dr', ])
  # sig_dr <- if_else(model_dr$p.value < c(0.05 / 2), 'Dr sig', NA)
  # model_lay <- t.test(gap_measure ~ 1, data = data[data$who_IDK == 'Lay', ])
  # sig_lay <- if_else(model_lay$p.value < c(0.05 / 2), 'Lay sig', NA)

# FG <- data %>% 
#     ggplot(aes(x = who_IDK, y = gap_measure)) +
#     stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.2, linewidth = 1, position = position_dodge(0.9)) +
#     stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
# # scale_fill_manual(values = c("grey", "green")) +
#           theme_bw() +
#   Theme

  return(STAS)
# return(list(STAS, model_dr, sig_dr, model_lay, sig_lay,  FG))
  
  
}

```

```{r}
Data_3 <- readRDS(here("Data//Data_3.rds")) %>% 
    mutate(doc_minus_lay_meti = if_else(grepl('up', full_condition), METI_1 - METI_2,
METI_2 - METI_1)
, doc_minus_lay_expertise = if_else(grepl('up', full_condition), Expertise_1 - Expertise_2,
Expertise_2 - Expertise_1)
, doc_minus_lay_integrity = if_else(grepl('up', full_condition), Integrity_1 - Integrity_2,
Integrity_2 - Integrity_1)
, doc_minus_lay_benevolence = if_else(grepl('up', full_condition), Benevolance_1 - Benevolance_2,
Benevolance_2 - Benevolance_1))      

Data_3 <- Data_3 %>% 
  mutate(who_IDK = if_else(grepl('DK', full_condition) == TRUE, 'Dr', 'Lay')

            , position_IDK = if_else(grepl('DKup', full_condition) == TRUE | grepl('Knowdown', full_condition) == TRUE | grepl('KnowDown', full_condition) == TRUE, 'first', 'second')) %>%
  mutate(
         
          idk_minus_know_meti =  if_else(position_IDK == 'first', METI_1 - METI_2, METI_2 - METI_1)
         
         , idk_minus_know_Expertise =  if_else(position_IDK == 'first', Expertise_1 - Expertise_2, Expertise_2 - Expertise_1)
         
         , idk_minus_know_Integrity =  if_else(position_IDK == 'first', Integrity_1 - Integrity_2, Integrity_2 - Integrity_1)
         
         , idk_minus_know_Benevolance =  if_else(position_IDK == 'first', Benevolance_1 - Benevolance_2, Benevolance_2 - Benevolance_1)
  )

meti <- long_data(METI_1, METI_2, idk_minus_know_meti)
exoertise <- long_data(Expertise_1, Expertise_2, idk_minus_know_Expertise)
integrity <- long_data(Integrity_1, Integrity_2, idk_minus_know_Integrity)
benevolence <- long_data(Benevolance_1, Benevolance_2, idk_minus_know_Benevolance)
```

# METI

## main effect

```{r}
third_way_analysis(meti, 'meti')

Data_3 %>% 
  summarise(round(mean_cl_normal(idk_minus_know_meti), 2),
            N = length(idk_minus_know_meti))

```

## two_way_within_anova

```{r}
two_way_within_anova_whoIDk(meti, idk_minus_know_meti)

two_way_within_anova_position(meti, idk_minus_know_meti)
```

## third way interaction

```{r}
METI_gap <- two_way_analysis_gap(Data_3$idk_minus_know_meti, 'METI')
t_1 <- one_sample_correc(Data_3$idk_minus_know_meti, 'Dr', 'first', 'third')
t_2 <- one_sample_correc(Data_3$idk_minus_know_meti, 'Dr', 'second', 'third')
t_3 <- one_sample_correc(Data_3$idk_minus_know_meti, 'Lay', 'first', 'third')
t_4 <- one_sample_correc(Data_3$idk_minus_know_meti, 'Lay', 'second', 'third')

p.adjust(c(t_1$model$p.value, t_2$model$p.value, t_3$model$p.value, t_4$model$p.value),method="bonferroni")



```

# expertise

## main effect

```{r}
third_way_analysis(exoertise, 'exoertise')

Data_3 %>% 
  summarise(round(mean_cl_normal(idk_minus_know_Expertise), 2),
            N = length(idk_minus_know_Expertise))

```

## two_way_within_anova

```{r}
two_way_within_anova_position(exoertise, idk_minus_know_Expertise)
two_way_within_anova_whoIDk(exoertise, idk_minus_know_Expertise)
```

```{r}
Expertise_gap <- two_way_analysis_gap(Data_3$idk_minus_know_Expertise, title = 'Expertise')
t_1 <- one_sample_correc(Data_3$idk_minus_know_Expertise, 'Dr', 'first', 'third')
t_2 <- one_sample_correc(Data_3$idk_minus_know_Expertise, 'Dr', 'second', 'third')
t_3 <- one_sample_correc(Data_3$idk_minus_know_Expertise, 'Lay', 'first', 'third')
t_4 <- one_sample_correc(Data_3$idk_minus_know_Expertise, 'Lay', 'second', 'third')

p.adjust(c(t_1$model$p.value, t_2$model$p.value, t_3$model$p.value, t_4$model$p.value),method="bonferroni")






(METI_gap$fig + Expertise_gap$fig + Integrity_gap$fig + Benevolance_gap$fig)
```

# Integrity

## main effect

```{r}
third_way_analysis(integrity, 'integrity')

Data_3 %>% 
  summarise(round(mean_cl_normal(idk_minus_know_Integrity), 2),
            N = length(idk_minus_know_Integrity))

```

## two_way_within_anova

```{r}
two_way_within_anova_position(integrity, idk_minus_know_Integrity)
two_way_within_anova_whoIDk(integrity, idk_minus_know_Integrity)
```

## third way interaction

```{r}
Integrity_gap <- two_way_analysis_gap(Data_3$idk_minus_know_Integrity, 'Integrity')
t_1 <- one_sample_correc(Data_3$idk_minus_know_Integrity, 'Dr', 'first', 'third')
t_2 <- one_sample_correc(Data_3$idk_minus_know_Integrity, 'Dr', 'second', 'third')
t_3 <- one_sample_correc(Data_3$idk_minus_know_Integrity, 'Lay', 'first', 'third')
t_4 <- one_sample_correc(Data_3$idk_minus_know_Integrity, 'Lay', 'second', 'third')

p.adjust(c(t_1$model$p.value, t_2$model$p.value, t_3$model$p.value, t_4$model$p.value),method="bonferroni")



```

# Benevolence

## main effect

```{r}
third_way_analysis(benevolence, 'benevolence')

Data_3 %>% 
  summarise(round(mean_cl_normal(idk_minus_know_Benevolance), 2),
            N = length(idk_minus_know_Benevolance))

```

## two_way_within_anova

```{r}
two_way_within_anova_position(benevolence, idk_minus_know_Benevolance)
two_way_within_anova_whoIDk(benevolence, idk_minus_know_Benevolance)
```

## third way interaction

```{r}
Benevolance_gap <- two_way_analysis_gap(Data_3$idk_minus_know_Benevolance, 'Benevolence')
t_1 <- one_sample_correc(Data_3$idk_minus_know_Benevolance, 'Dr', 'first', 'third')
t_2 <- one_sample_correc(Data_3$idk_minus_know_Benevolance, 'Dr', 'second', 'third')
t_3 <- one_sample_correc(Data_3$idk_minus_know_Benevolance, 'Lay', 'first', 'third')
t_4 <- one_sample_correc(Data_3$idk_minus_know_Benevolance, 'Lay', 'second', 'third')

p.adjust(c(t_1$model$p.value, t_2$model$p.value, t_3$model$p.value, t_4$model$p.value), method = "bonferroni")

```

```{r}
Data_3$Complaience_bin <- if_else(grepl('Dr', Data_3$Complaience), 'Dr', 
                                  if_else(Data_3$Complaience == 'Neither', Data_3$Complaience, 'Lay'))

Data_3 %>% 
  select(Complaience, Complaience_bin) %>% 
  distinct()

GoF(Data_3$Complaience_bin, Probs = c(1 / 3, 1 / 3, 1 / 3))
GoF(Data_3$Complaience_bin[Data_3$Complaience_bin != 'Neither'], Probs = c(1 / 2, 1 / 2))

CT( Data_3$Complaience_bin, Data_3$Dr_answer)
ggsave(filename = 'compliance.png', height = 20, width = 40, units = 'cm')

```

```{r}
log_data <- meti %>% 
  mutate(new_com = case_when (
    
    grepl('Dr', Complaience) == TRUE & grepl('Dr', who_IDK) == TRUE ~ 1
    , grepl('Dr', Complaience) == FALSE & grepl('Dr', who_IDK) == FALSE ~ 1
    , Complaience == 'Neither' ~ 2
    , T ~ 0
    
    )) %>% 
  
    filter(new_com < 2) %>% 
  distinct(who_IDK, position_IDK , Q1, new_com) %>% 
  left_join(Data_3[, c('Q1', 'Gender', 'Age')], by = 'Q1')


 regLog1 <- stats::glm(new_com ~ who_IDK * position_IDK + Gender + Age, family = binomial('logit'), data = log_data[log_data$Gender != 'Prefer not to specify', ])
 regLog1 %>% summary()
 # Performing a logistic regression
  ORCI    <- round(exp(cbind(Odds_Ratios = stats::coef(regLog1), stats::confint(regLog1))), 2)  # Calculation odds ratios and confidance intervales for the odds ratios

  cdiff           <- round(regLog1$null.deviance - regLog1$deviance, 2)  # Calculating the Chi square value of the model
  dfdiff          <- regLog1$df.null - regLog1$df.residual              # Calculating the degrees of freedom value of the model
  p               <- round(stats::pchisq(q = cdiff, df = dfdiff, lower.tail = FALSE), 100) # Calculating the p value of the model
  Nagelkerke      <- rcompanion::nagelkerke(fit = regLog1, null = NULL, restrictNobs = FALSE)  # Calculating the explained variance
  NagelkerkePrint <- paste0(100 * round(Nagelkerke$Pseudo.R.squared.for.model.vs.null[3], 4), "%") # Extracting the explained variance

  Hoslem          <- ResourceSelection::hoslem.test(x = regLog1$y
                                                    , y = fitted(regLog1)
                                                    , g = 10)  # Calculating the significance of the accuracy
  hoslemStatistic <- round(Hoslem$statistic, 2)
  hoslemP         <- round(Hoslem$p.value, 2)
  binaryCorrect   <- ifelse(regLog1$fitted.values > 0.5, 1, 0)                        # Creating a vector of 1 and 0 (by the probabilities of each ID to be 1, and the Classification value)
  Prediction      <- table(log_data$new_com, binaryCorrect)                                                    # Creating a table with the predicted values and the actual DV values
  Accuracy        <- paste0(round((Prediction[1, 1] + Prediction[2, 2]) / sum(Prediction) * 100, 2), "%")   # Calculating the Accuracy
  Sensitivity     <- paste0(round(Prediction[2, 2] / (Prediction[2, 2] + Prediction[1, 1]) * 100, 2), "%")  # Calculating the sensitivity
  Specificity     <- paste0(round(Prediction[1, 1] / (Prediction[1, 1] + Prediction[1, 2]) * 100, 2), "%")  # Calculating the specificity

  
CT(log_data$new_com, log_data$who_IDK)  
CT(log_data$new_com, log_data$position_IDK)  
CT(log_data$new_com, paste0(log_data$who_IDK, '_',log_data$position_IDK)) 

```

```{r}




two_way_data_METI %>% 
  group_by(group) %>% 
  summarise(M = round(mean(measure), 2)) # %>%
  arrange(M)

two_way_data_METI %>% 
  group_by(Dr_answer , Dr_position, doc_lay) %>% 
  summarise(M = round(mean(measure), 2))  %>%  
  arrange(M)

two_way_data_METI$Dr_answer=as.factor(two_way_data_METI$Dr_answer)
two_way_data_METI$Dr_position=as.factor(two_way_data_METI$Dr_position)
two_way_data_METI$doc_lay=as.factor(two_way_data_METI$doc_lay)
contrasts(two_way_data_METI$Dr_answer)[1]=-1
contrasts(two_way_data_METI$Dr_position)[1]=-1
contrasts(two_way_data_METI$doc_lay)[1]=-1
model <- lme4::lmer(measure ~ Dr_answer * Dr_position * doc_lay + (1 | Q1 ), data = two_way_data_METI)
vif(model)

two_way_data_METI %>% 
  group_by(who_first , answer_first, measure_time) %>% 
  summarise(M = round(mean(measure), 2)) %>%  
  arrange(M)  


meti_1 <-   ezANOVA(two_way_data_METI, wid = Q1, within = .(doc_lay), between = .(Dr_answer, Dr_position), dv = measure, type = 3, white.adjust = FALSE)




    two_way_data_METI %>% 
  ggplot(aes(x = group, y = measure, fill = doc_lay , color = Answer)) +
 # geom_violin(alpha = 0, aes(color = Dr_answer)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.2, linewidth = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
scale_fill_manual(values = c("grey", "green")) + 
scale_color_manual(values = c("red", "blue")) + 
      
          ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  ggtitle('METI 3') + 
  # facet_grid(~measure_time) +
  Theme
  
  
  two_way_data_METI %>% 
  ggplot(aes(x = who_first, y = measure, fill = answer_first )) +
 # geom_violin(alpha = 0, aes(color = Dr_answer)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.2, linewidth = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
    scale_fill_manual(values = c("grey", "green")) + 
scale_color_manual(values = c("red", "blue")) + 
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  ggtitle('METI 3') + 
  facet_grid(~measure_time) +
  Theme
  
  
    two_way_data_METI %>% 
  ggplot(aes(x = Dr_answer, y = measure, fill = Dr_position )) +
 # geom_violin(alpha = 0, aes(color = Dr_answer)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.2, linewidth = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
      scale_fill_manual(values = c("grey", "green")) + 
scale_color_manual(values = c("red", "blue")) + 
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  ggtitle('METI 3') + 
  facet_grid(~doc_lay) +
  Theme
  

   
   
   
 two_way_analysis_gap(Data_3$doc_minus_lay_expertise)
 two_way_analysis_gap(Data_3$doc_minus_lay_integrity)
 two_way_analysis_gap(Data_3$doc_minus_lay_benevolence)
    
    
```

calculating the gap between the doc and the lay, than to do 2 Dr position \* 2 Dr asnwer
