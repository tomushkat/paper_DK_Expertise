---
title: "preanalysis"
format: html
editor: visual
---


```{r}
pacman::p_load(tidyverse, psych, skimr, here, gmodels, doSPSS, car, effectsize, boot, ez, patchwork)
Theme <- theme(axis.text.x = element_text(size = 20),
        axis.text.y = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20),
        legend.text = element_text(size = 20),
        legend.title = element_text(size = 20),
        title = element_text(size = 20)) 


long_data <- function(dv_1, dv_2){
  
  First_meti <- Data_3 %>% 
  select(Q1, full_condition, measure = {{dv_1}}, Dr_answer, Dr_position, Complaience) %>% 
  mutate(who_first = if_else(grepl('up', full_condition), 'Dr', 'Lay')
         , answer_first = if_else((grepl('DK', full_condition) & grepl('up', full_condition)) |
                                  (grepl('Know', full_condition) & grepl('down', full_condition)) |
                                    (grepl('Know', full_condition) & grepl('Down', full_condition)), 'IDK', 'Know')
         , measure_time = 'First') %>% 
  mutate(doc_lay = who_first
         , Answer = answer_first)

Second_meti <- Data_3 %>% 
  select(Q1, full_condition, measure = {{dv_2}}, Dr_answer, Dr_position, Complaience) %>% 
  mutate(who_first = if_else(grepl('up', full_condition), 'Dr', 'Lay')
         , answer_first = if_else((grepl('DK', full_condition) & grepl('up', full_condition)) |
                                  (grepl('Know', full_condition) & grepl('down', full_condition)) |
                                    (grepl('Know', full_condition) & grepl('Down', full_condition)), 'IDK', 'Know')
         , measure_time = 'Second') %>% 
  mutate(doc_lay = if_else(who_first == 'Dr', 'Lay', 'Dr')
         , Answer = if_else(answer_first == 'IDK', 'Know', 'IDK'))


full_meti <- rbind(First_meti, Second_meti) %>% 
   mutate(group = case_when(
            grepl(x = full_condition, pattern = 'DKdown') == TRUE ~ 'doc_DK_second'
          , grepl(x = full_condition, pattern = c('KnowDown')) == TRUE ~ 'doc_know_second'
          , grepl(x = full_condition, pattern = c( 'Knowdown'))  == TRUE ~ 'doc_know_second'
          , grepl(x = full_condition, pattern = 'Knowup')  == TRUE ~ 'doc_know_first'
          , grepl(x = full_condition, pattern = 'DKup')  == TRUE ~ 'doc_DK_first'
            )
          ) %>% 
  mutate(Dr_answer = as_factor(Dr_answer)
         , Dr_position = as_factor(Dr_position)
         , doc_lay = as_factor(doc_lay)) 
  
  contrasts(full_meti$Dr_answer)[1]   <- -1
  contrasts(full_meti$Dr_position)[1] <- -1
  contrasts(full_meti$doc_lay)[1]     <- -1

  return(full_meti)
  
}

two_way_analysis_order <- function(data, order, title){
  
  if (order == 1){
    
    new_data <- data %>% 
      filter(measure_time == 'First') %>% 
      select(doc_lay, Answer, measure, Q1) %>% 
      mutate(dv_post = paste0(doc_lay, '_', Answer))
    
  } else {
    
      new_data <- data %>% 
        filter(measure_time == 'Second') %>% 
        select(doc_lay, Answer, measure, Q1) %>% 
        mutate(dv_post = paste0(doc_lay, '_', Answer))
    
  }
  
  
  sum <- new_data %>% 
    group_by(doc_lay, Answer) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
  
  meti_1 <- ezANOVA(new_data, wid = Q1, between = .(Answer, doc_lay), dv = measure, type = 3, white.adjust =       FALSE)
  
  post <- pairwise.t.test(new_data$measure, new_data$dv_post, p.adjust.method = 'bonferroni')
  
  fig <-    new_data %>% 
    mutate(doc_lay = if_else(doc_lay == 'Lay', 'Layperson', 'Physician')
           , Answer = if_else(Answer == 'IDK', 'IDK', 'A specific offer')
           , `Reply type` = Answer) %>% 
  ggplot(aes(x = doc_lay, y = measure, fill = `Reply type` )) +
   stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.4, linewidth = 2, position = position_dodge(0.9)) +
    stat_summary(fun = mean, geom = "bar",  position = position_dodge(0.9), alpha = 0.8) +
 geom_point(aes(color = `Reply type`), position = position_jitterdodge(jitter.width = 0.2, jitter.height = 0), size = 1) +    scale_fill_manual(values =  c("grey30", "grey80")) +
      scale_color_manual(values = c("grey0", "grey0")) +  # Set the point colors to gray
          theme_bw() + ggtitle(title) + xlab('') + ylab('') +
     theme(legend.position = "none") +
  Theme
  
  return(list(sum, meti_1, post, fig = fig))

}



third_way_analysis <- function(data, title){
  
   new_data <- data %>% 
      select(Dr_position, Dr_answer, doc_lay, Q1, measure) %>% 
      mutate(dv_post = paste0(Dr_position, '_', Dr_answer, '_', doc_lay))
  
  
  sum <- new_data %>% 
    group_by(Dr_position, Dr_answer, doc_lay) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
  
  meti_1 <- ezANOVA(new_data, wid = Q1, between = .(Dr_answer, Dr_position), within = .(doc_lay), dv = measure, type = 3, white.adjust = FALSE)
  
  post <- pairwise.t.test(new_data$measure, new_data$dv_post, p.adjust.method = 'bonferroni')
  
  fig <-    new_data %>% 
  ggplot(aes(x = Dr_position, y = measure, fill = Dr_answer)) +
    
   stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.3, linewidth = 1, position = position_dodge(0.9)) +
    
    stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    
      scale_fill_manual(values = c("grey30", "grey80")) +
    
    facet_wrap(~doc_lay)
# scale_fill_manual(values = c("grey", "green")) +
          theme_bw() + ggtitle(title) +
            xlab('') + ylab('') +
  Theme
  
  return(list(sum, meti_1, post, fig))

}

two_way_analysis_between <- function(data, title){
  
  new_data <- data %>% 
      group_by(Q1, Dr_position, Dr_answer) %>% 
      mutate(dv = mean(measure)
             , dv_post = paste0(Dr_position, '_', Dr_answer))
  
  sum <- new_data %>% 
    group_by(Dr_position, Dr_answer) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
  
  meti_1 <- ezANOVA(new_data, wid = Q1, between = .(Dr_position, Dr_answer), dv = measure, type = 3, white.adjust = FALSE)
  
  post <- pairwise.t.test(new_data$measure, new_data$dv_post, p.adjust.method = 'bonferroni')
  
  fig <-    new_data %>% 
  ggplot(aes(x = Dr_position, y = measure, fill = Dr_answer)) +
   stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.2, linewidth = 1, position = position_dodge(0.9)) +
    stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
scale_fill_manual(values = c("grey", "green")) + 
          theme_bw() + ggtitle(title) +
  Theme
  
  return(list(sum, meti_1, post, fig))

}


two_way_analysis_gap <- function(dv) {
  
  new_data <- Data_3 %>% 
    mutate(measure = {{dv}}) %>% 
    select(Dr_answer, Dr_position, Q1, measure) %>% 
    mutate(dv_post = paste0(Dr_answer, '_', Dr_position))
  
  sum <- new_data %>% 
    group_by(Dr_answer, Dr_position) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
  
  meti_1 <- ezANOVA(new_data, wid = Q1, between = .(Dr_answer, Dr_position), dv = measure, type = 3, white.adjust =       FALSE)
  
  post <- pairwise.t.test(new_data$measure, new_data$dv_post, p.adjust.method = 'bonferroni')
  
  fig <-    new_data %>% 
  ggplot(aes(x = Dr_answer, y = measure, fill = Dr_position )) +
   stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.2, linewidth = 1, position = position_dodge(0.9)) +
    stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
scale_fill_manual(values = c("grey30", "grey80")) +
          theme_bw() + xlab('') + ylab('') +
  Theme
  
  return(list(sum, meti_1, post, fig))
  
}

one_sample_correc <- function(data, answer, position = NULL, interaction_type) {
  
  if (interaction_type == 'third') {
    
       n_comparisons = 4    
       adjust_p <- (0.05 / n_comparisons)
  
      model <- t.test(data[Data_3$Dr_answer == answer & Data_3$Dr_position == position], mu = 0)
    
  } else {
    
     n_comparisons = 2    
      adjust_p <- (0.05 / n_comparisons)
  
      model <- t.test(data[Data_3$Dr_answer == answer], mu = 0)
    
    
    
  }

  critical_p <- if_else(model$p.value < adjust_p, 'significant with adjustment', 'not significant')

  return(list(model, critical_p))
}
```

```{r}
Data_3 <- readRDS(here("Data//Data_3.rds")) %>% 
    mutate(doc_minus_lay_meti = if_else(grepl('up', full_condition), METI_1 - METI_2,
METI_2 - METI_1)
, doc_minus_lay_expertise = if_else(grepl('up', full_condition), Expertise_1 - Expertise_2,
Expertise_2 - Expertise_1)
, doc_minus_lay_integrity = if_else(grepl('up', full_condition), Integrity_1 - Integrity_2,
Integrity_2 - Integrity_1)
, doc_minus_lay_benevolence = if_else(grepl('up', full_condition), Benevolance_1 - Benevolance_2,
Benevolance_2 - Benevolance_1))      
     
```

# Age and gender

## Goodness of fit

```{r}

table(Data_3$Gender)
(100 * table(Data_3$Gender) / nrow(Data_3)) %>%
  round(1)

skim(Data_3$Age)

```

## Independence

```{r}
CT(Data_3$Gender[Data_3$Gender %in% c("Male", "Female")], Data_3$Condition[Data_3$Gender %in% c("Male", "Female")])

oneWayAnova(Data_3$Age, Data_3$Condition)
```

## Alpha

```{r}
Data_3 %>% 
  select(Competent_1, Intelligent_1, Educated_1, Professional_1, Experienced_1, Qualified_1
         , Sincere_1, Honest_1, Just_1, Fair_1 
         , Moral_1, Ethical_1, Responsible_1, Considerate_1) %>% 
  alpha()

Data_3 %>% 
  select(Competent_1, Intelligent_1, Educated_1, Professional_1, Experienced_1, Qualified_1
         ) %>% 
  alpha()

Data_3 %>% 
  select(
        Sincere_1, Honest_1, Just_1, Fair_1 
         ) %>% 
  alpha()

Data_3 %>% 
  select( 
        Moral_1, Ethical_1, Responsible_1, Considerate_1) %>% 
  alpha()

apaTables::apa.cor.table(Data_3 %>% select(METI_1, Expertise_1, Integrity_1, Benevolance_1))
cor.test(Data_3$Integrity_1, Data_3$Benevolance_1)
```

```{r}
two_way_data_METI <- long_data(METI_1, METI_2)
two_way_data_Expertise <- long_data(Expertise_1, Expertise_2)
two_way_data_Integrity <- long_data(Integrity_1, Integrity_2)
two_way_data_Benevolence <- long_data(Benevolance_1, Benevolance_2)
```

# two way analyses

## METI first 2 * 2

### Order = 1

2 * 2 METI

```{r}
two_way_meti_1 <- two_way_analysis_order(two_way_data_METI, 1, title = 'METI')
# two_way_meti_1

fig_meti <- two_way_meti_1$fig
```

#### Answer IDK > Know

```{r}
two_way_data_METI %>% 
   filter(measure_time == 'First') %>% 
    group_by(Answer) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

#### doc_lay: Dr > Lay

```{r}
two_way_data_METI %>% 
   filter(measure_time == 'First') %>% 
    group_by(doc_lay) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

#### only physician
```{r}
t_1 <- indttest(two_way_data_METI$measure[two_way_data_METI$doc_lay == 'Dr' & two_way_data_METI$measure_time == 'First'], two_way_data_METI$Answer[two_way_data_METI$doc_lay == 'Dr' & two_way_data_METI$measure_time == 'First']) 
```

#### only layperson
```{r}
t_2 <- indttest(two_way_data_METI$measure[two_way_data_METI$doc_lay == 'Lay' & two_way_data_METI$measure_time == 'First'], two_way_data_METI$Answer[two_way_data_METI$doc_lay == 'Lay' & two_way_data_METI$measure_time == 'First']) 

p.adjust(c(t_1$Model_summary$p.value, t_2$Model_summary$p.value, 1, 1),method="bonferroni")

```


2 * 2 Expertise

```{r}
two_way_expertise_1 <- two_way_analysis_order(two_way_data_Expertise, 1, title = 'Expertise')
# two_way_expertise_1
#  ezANOVA(two_way_data_Expertise[two_way_data_Expertise$measure_time == 'First', ], wid = Q1, between = .(Answer, doc_lay), dv = measure, type = 3, white.adjust = TRUE)
 
fig_expertise <- two_way_expertise_1$fig
 
```

#### Answer: IDK > Lay

```{r}
two_way_data_Expertise %>% 
   filter(measure_time == 'First') %>% 
    group_by(Answer) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

#### doc_lay: Dr > Lay

```{r}
two_way_data_Expertise %>% 
   filter(measure_time == 'First') %>% 
    group_by(doc_lay) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

#### only physician
```{r}
t_1 <- indttest(two_way_data_Expertise$measure[two_way_data_Expertise$doc_lay == 'Dr' & two_way_data_Expertise$measure_time == 'First'], two_way_data_Expertise$Answer[two_way_data_Expertise$doc_lay == 'Dr' & two_way_data_Expertise$measure_time == 'First']) 
```

#### only layperson
```{r}
t_2 <- indttest(two_way_data_Expertise$measure[two_way_data_Expertise$doc_lay == 'Lay' & two_way_data_Expertise$measure_time == 'First'], two_way_data_Expertise$Answer[two_way_data_Expertise$doc_lay == 'Lay' & two_way_data_Expertise$measure_time == 'First']) 

p.adjust(c(t_1$Model_summary$p.value, t_2$Model_summary$p.value, 1, 1),method="bonferroni")

```

2 * 2 Integrity

```{r}
two_way_integrity_1 <- two_way_analysis_order(two_way_data_Integrity, 1, title = 'Integrity')
# two_way_integrity_1

fig_integrity <- two_way_integrity_1$fig

```

## Answer: IDK > Know
```{r}
two_way_data_Integrity %>% 
   filter(measure_time == 'First') %>% 
    group_by(Answer) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

#### only physician
```{r}
t_1 <- indttest(two_way_data_Integrity$measure[two_way_data_Integrity$doc_lay == 'Dr' & two_way_data_Integrity$measure_time == 'First'], two_way_data_Integrity$Answer[two_way_data_Integrity$doc_lay == 'Dr' & two_way_data_Integrity$measure_time == 'First']) 
```

#### only layperson
```{r}
t_2 <- indttest(two_way_data_Integrity$measure[two_way_data_Integrity$doc_lay == 'Lay' & two_way_data_Integrity$measure_time == 'First'], two_way_data_Integrity$Answer[two_way_data_Integrity$doc_lay == 'Lay' & two_way_data_Integrity$measure_time == 'First']) 

p.adjust(c(t_1$Model_summary$p.value, t_2$Model_summary$p.value, 1, 1),method="bonferroni")

```

2 * 2 Benevolence

```{r}
two_way_benevolence_1 <- two_way_analysis_order(two_way_data_Benevolence, 1, title = 'Benevolence')
# two_way_benevolence_1
# ezANOVA(two_way_data_Benevolence[two_way_data_Benevolence$measure_time == 'First', ], wid = Q1, between = .(Answer, doc_lay), dv = measure, type = 3, white.adjust = TRUE)

fig_benevolence <- two_way_benevolence_1$fig


study_3_round_1 <- 
(fig_meti + fig_expertise + fig_integrity + fig_benevolence)

```

#### Answer: IDK > Know

```{r}
two_way_data_Benevolence %>% 
   filter(measure_time == 'First') %>% 
    group_by(Answer) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

#### doc_lay: Dr > lay

```{r}
two_way_data_Benevolence %>% 
   filter(measure_time == 'First') %>% 
    group_by(doc_lay) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```


#### only physician
```{r}
t_1 <- indttest(two_way_data_Benevolence$measure[two_way_data_Benevolence$doc_lay == 'Dr' & two_way_data_Benevolence$measure_time == 'First'], two_way_data_Benevolence$Answer[two_way_data_Benevolence$doc_lay == 'Dr' & two_way_data_Benevolence$measure_time == 'First']) 
```

#### only layperson
```{r}
t_2 <- indttest(two_way_data_Benevolence$measure[two_way_data_Benevolence$doc_lay == 'Lay' & two_way_data_Benevolence$measure_time == 'First'], two_way_data_Benevolence$Answer[two_way_data_Benevolence$doc_lay == 'Lay' & two_way_data_Benevolence$measure_time == 'First']) 


p.adjust(c(t_1$Model_summary$p.value, t_2$Model_summary$p.value, 1, 1),method="bonferroni")
```

```{r}
all_1 <- (two_way_meti_1[4][[1]] +  two_way_expertise_1[4][[1]] + two_way_integrity_1[4][[1]] + two_way_benevolence_1[4][[1]])
ggsave(plot  = all_1, filename= 'experiment_1_first_round.png',width = 40, height  = 20, units = 'cm')
```

### Order = 2

2 * 2 METI

```{r}
two_way_meti_2 <- two_way_analysis_order(two_way_data_METI, 2, title = 'METI')
two_way_meti_2
```

#### Answer: IDK > Know

```{r}
two_way_data_METI %>% 
   filter(measure_time != 'First') %>% 
    group_by(Answer) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

#### doc_lay: Dr > Lay

```{r}
two_way_data_METI %>% 
   filter(measure_time != 'First') %>% 
    group_by(doc_lay) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

2 * 2 Expertise

```{r}
two_way_expertise_2 <- two_way_analysis_order(two_way_data_Expertise, 2, title = 'Expertise')
two_way_expertise_2
 ezANOVA(two_way_data_Expertise[two_way_data_Expertise$measure_time != 'First', ], wid = Q1, between = .(Answer, doc_lay), dv = measure, type = 3, white.adjust = TRUE)
```

#### Answer: IDK > kNOW

```{r}
two_way_data_Expertise %>% 
   filter(measure_time != 'First') %>% 
    group_by(Answer) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

#### doc_lay: Dr > Lay

```{r}
two_way_data_Expertise %>% 
   filter(measure_time != 'First') %>% 
    group_by(doc_lay) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

2 * 2 Integrity

```{r}
two_way_integrity_2 <- two_way_analysis_order(two_way_data_Integrity, 2, title = 'Integrity')
two_way_integrity_2
```

#### Answer: IDK > Know

```{r}
two_way_data_Integrity %>% 
   filter(measure_time != 'First') %>% 
    group_by(Answer) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

#### doc_lay: Dr > Lay

```{r}
two_way_data_Integrity %>% 
   filter(measure_time != 'First') %>% 
    group_by(doc_lay) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))

```

2 * 2 Benevolence

```{r}
two_way_benevolence_2 <- two_way_analysis_order(two_way_data_Benevolence, 2, title = 'Benevolence')
two_way_benevolence_2
```

#### Answer: IDK > Know

```{r}
two_way_data_Benevolence %>% 
   filter(measure_time != 'First') %>% 
    group_by(Answer) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

#### doc_lay: Dr > Lay

```{r}
two_way_data_Benevolence %>% 
   filter(measure_time != 'First') %>% 
    group_by(doc_lay) %>% 
    summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure)) 
```

```{r}
(two_way_meti_2[4][[1]] +  two_way_expertise_2[4][[1]] + two_way_integrity_2[4][[1]] + two_way_benevolence_2[4][[1]])
```

```{r}
(two_way_meti_1[4][[1]] +  two_way_meti_2[4][[1]] +
   two_way_expertise_1[4][[1]] + two_way_expertise_2[4][[1]] +
   two_way_integrity_1[4][[1]] + two_way_integrity_2[4][[1]] +
   two_way_benevolence_1[4][[1]] + two_way_benevolence_2[4][[1]]) + plot_layout(ncol = 2)
```

# Thired way analyses

## METI

### Third Way analysis - third way interaction

```{r}
third_way_analysis(two_way_data_METI, 'METI')
```

```{r}
meti_idk <- Data_3 %>% 
  mutate(source_answer_iden = if_else(Dr_answer == 'IDK', 'Dr', 'Lay')
         , Answer = 'IDK'
         , meti = if_else((Dr_answer == 'IDK' & Dr_position == 'First') |
                                      (Dr_answer == 'Know' & Dr_position == 'Second'), METI_1, METI_2)
         , source_position = if_else((Dr_answer == 'IDK' & Dr_position == 'First') |
                                         (Dr_answer == 'Know' & Dr_position == 'Second'), 'First', 'Second')) %>% 
  select(Q1, Answer, source_answer_iden, meti, source_position)

meti_know <- Data_3 %>% 
  mutate(source_answer_iden = if_else(Dr_answer == 'IDK', 'Lay', 'Dr')
         , Answer = 'Know'
         , meti = if_else((Dr_answer == 'IDK' & Dr_position == 'First') |
                           (Dr_answer == 'Know' & Dr_position == 'Second'), METI_2, METI_1)
         , source_position = if_else((Dr_answer == 'IDK' & Dr_position == 'First') |
                                         (Dr_answer == 'Know' & Dr_position == 'Second'), 'Second', 'First')) %>% 
  select(Q1, Answer, source_answer_iden, meti, source_position)
d <- rbind(meti_idk, meti_know)
d %>% 
  arrange(Q1, Answer, source_answer_iden, source_position) %>% 
  head()

d %>% 
     group_by(doc_lay) %>% 
     summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```



#### Dr_position: Second > first

```{r}
two_way_data_METI %>% 
  group_by(Q1, Dr_position) %>% 
  summarise(M = mean(measure)) %>% 
  group_by(Dr_position) %>% 
  summarise(round(mean_cl_normal(M), 2)
            , N = length(M))
```

#### doc_lay: Dr > Lay

```{r}
two_way_data_METI %>% 
     group_by(doc_lay) %>% 
     summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

### Between analysis

```{r}
two_way_analysis_between(two_way_data_METI, 'meti')
```

#### Dr_position: Second > Frist

```{r}
two_way_data_METI %>% 
  group_by(Dr_position) %>% # Dr_position
  summarise(round(mean_cl_normal(measure), 2)
            , N = length(measure))
```

### Dr_answer * identity interaction

```{r}
Data_3 %>% 
  group_by(Dr_answer) %>% # Dr_position
  summarise(round(mean_cl_normal(doc_minus_lay_meti), 2)
            , N = length(doc_minus_lay_meti))

meti_IDK_model <- one_sample_correc(data = Data_3$doc_minus_lay_meti, answer = 'IDK', interaction_type = 'two')
meti_know_model <- one_sample_correc(data = Data_3$doc_minus_lay_meti, answer = 'Know', interaction_type = 'two')
```

### Delta analysis

```{r}
third_eay_meti_plot <- two_way_analysis_gap(doc_minus_lay_meti) 
ggsave(filename = 'third_eay_meti_plot.png', height = 20, width = 40, units = 'cm')

meti_IDK_first_model <- one_sample_correc(Data_3$doc_minus_lay_meti, 'IDK', 'First', 'third')
meti_IDK_second_model <- one_sample_correc(Data_3$doc_minus_lay_meti, 'IDK', 'Second', 'third')
meti_Know_first_model <- one_sample_correc(Data_3$doc_minus_lay_meti, 'Know', 'First', 'third')
meti_Know_second_model <- one_sample_correc(Data_3$doc_minus_lay_meti, 'Know', 'Second', 'third')
```

## Expertise

### Third Way analysis

```{r}
third_way_analysis(two_way_data_Expertise, 'Expertise')
```

#### Dr_answer know > IDK

```{r}
two_way_data_Expertise %>% 
  group_by(Q1, Dr_answer) %>% 
  summarise(M = mean(measure)) %>% 
  group_by(Dr_answer) %>% 
  summarise(round(mean_cl_normal(M), 2)
            , N = length(M))
```

#### Dr_position: Second > first

```{r}
two_way_data_Expertise %>% 
  group_by(Q1, Dr_position) %>% 
  summarise(M = mean(measure)) %>% 
  group_by(Dr_position) %>% 
  summarise(round(mean_cl_normal(M), 2)
            , N = length(M))

```

#### doc_lay

```{r}

two_way_data_Expertise %>% 
     group_by(doc_lay) %>% 
     summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))

```

### Between analysis

```{r}
two_way_analysis_between(two_way_data_Expertise, 'Expertise')
```

#### Dr_answer

```{r}
two_way_data_Expertise %>% 
  group_by(Dr_answer) %>% # Dr_position
  summarise(round(mean_cl_normal(measure), 2)
            , N = length(measure))
```

#### Dr_position: Second > first

```{r}
two_way_data_Expertise %>% 
  group_by(Dr_position) %>% # Dr_position
  summarise(round(mean_cl_normal(measure), 2)
            , N = length(measure))
```

### Dr_answer * identity interaction

```{r}
Data_3 %>% 
  group_by(Dr_answer) %>% # Dr_position
  summarise(round(mean_cl_normal(doc_minus_lay_expertise), 2)
            , N = length(doc_minus_lay_expertise))
```

### Delta analysis

```{r}
two_way_analysis_gap(doc_minus_lay_expertise)
ggsave(filename = 'third_way_expertise_plot.png', height = 20, width = 40, units = 'cm')
meti_IDK_first_model <- one_sample_correc(Data_3$doc_minus_lay_expertise, 'IDK', 'First', 'third')
meti_IDK_second_model <- one_sample_correc(Data_3$doc_minus_lay_expertise, 'IDK', 'Second', 'third')
meti_Know_first_model <- one_sample_correc(Data_3$doc_minus_lay_expertise, 'Know', 'First', 'third')
meti_Know_second_model <- one_sample_correc(Data_3$doc_minus_lay_expertise, 'Know', 'Second', 'third')
```

## Integrity

### Third Way analysis

```{r}
third_way_analysis(two_way_data_Integrity, 'Integrity')
```

#### doc_lay

```{r}
two_way_data_Integrity %>% 
     group_by(doc_lay) %>% 
     summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

### Between analysis

```{r}
two_way_analysis_between(two_way_data_Integrity, 'integrity')
```

### Dr_answer * identity interaction

```{r}
Data_3 %>% 
  group_by(Dr_answer) %>% # Dr_position
  summarise(round(mean_cl_normal(doc_minus_lay_integrity), 2)
            , N = length(doc_minus_lay_integrity))
```

### Delta analysis

```{r}
two_way_analysis_gap(doc_minus_lay_integrity)
ggsave(filename = 'third_way_integrity_plot.png', height = 20, width = 40, units = 'cm')
integrity_IDK_first_model <- one_sample_correc(Data_3$doc_minus_lay_integrity, 'IDK', 'First', 'third')
integrity_IDK_second_model <- one_sample_correc(Data_3$doc_minus_lay_integrity, 'IDK', 'Second', 'third')
integrity_Know_first_model <- one_sample_correc(Data_3$doc_minus_lay_integrity, 'Know', 'First', 'third')
integrity_Know_second_model <- one_sample_correc(Data_3$doc_minus_lay_integrity, 'Know', 'Second', 'third')
```

## Benevolence

### Third Way analysis

```{r}
third_way_analysis(two_way_data_Benevolence, 'Benevolence')
```

#### Dr_position: Second > first

```{r}
two_way_data_Benevolence %>% 
  group_by(Q1, Dr_position) %>% 
  summarise(M = mean(measure)) %>% 
  group_by(Dr_position) %>% 
  summarise(round(mean_cl_normal(M), 2)
            , N = length(M))
```

#### doc_lay

```{r}
two_way_data_Benevolence %>% 
     group_by(doc_lay) %>% 
     summarise(round(mean_cl_normal(measure), 2)
               , N = length(measure))
```

### Between analysis

```{r}
two_way_analysis_between(two_way_data_Benevolence, 'Benevolence')
```

#### Dr_position: Second > first

```{r}
two_way_data_Benevolence %>% 
  group_by(Dr_position) %>% # Dr_position
  summarise(round(mean_cl_normal(measure), 2)
            , N = length(measure))
```

### Dr_answer * identity interaction

```{r}
Data_3 %>% 
  group_by(Dr_answer) %>% # Dr_position
  summarise(round(mean_cl_normal(doc_minus_lay_benevolence), 2)
            , N = length(doc_minus_lay_benevolence))
```

### Delta analysis

```{r}
two_way_analysis_gap(doc_minus_lay_benevolence)
ggsave(filename = 'third_way_benevolence_plot.png', height = 20, width = 40, units = 'cm')
benevolence_IDK_first_model <- one_sample_correc(Data_3$doc_minus_lay_benevolence, 'IDK', 'First', 'third')
benevolence_IDK_second_model <-  one_sample_correc(Data_3$doc_minus_lay_benevolence, 'IDK', 'Second', 'third')
benevolence_Know_first_model <- one_sample_correc(Data_3$doc_minus_lay_benevolence, 'Know', 'First', 'third')
benevolence_Know_second_model <- one_sample_correc(Data_3$doc_minus_lay_benevolence, 'Know', 'Second', 'third')
```

```{r}
Data_3$Complaience_bin <- if_else(grepl('Dr', Data_3$Complaience), 'Dr', 
                                  if_else(Data_3$Complaience == 'Neither', Data_3$Complaience, 'Lay'))

Data_3 %>% 
  select(Complaience, Complaience_bin) %>% 
  distinct()

GoF(Data_3$Complaience_bin, Probs = c(1 / 3, 1 / 3, 1 / 3))
GoF(Data_3$Complaience_bin[Data_3$Complaience_bin != 'Neither'], Probs = c(1 / 2, 1 / 2))

CT(Data_3$Complaience_bin, Data_3$Dr_answer)
```


```{r}
log_data <- two_way_data_METI %>% 
  mutate(new_com = case_when (
    
    grepl('Dr', Complaience) == TRUE ~ 1
    , Complaience == 'Neither' ~ 2
    , T ~ 0
    
    )) %>% 
  
    filter(new_com < 2) %>% 
  distinct(who_first, answer_first, new_com, Q1)
          

 regLog1 <- stats::glm(new_com ~ who_first * answer_first, family = binomial('logit'), data = log_data)
 regLog1 %>% summary()
 # Performing a logistic regression
  ORCI    <- round(exp(cbind(Odds_Ratios = stats::coef(regLog1), stats::confint(regLog1))), 2)  # Calculation odds ratios and confidance intervales for the odds ratios

  cdiff           <- round(regLog1$null.deviance - regLog1$deviance, 2)  # Calculating the Chi square value of the model
  dfdiff          <- regLog1$df.null - regLog1$df.residual              # Calculating the degrees of freedom value of the model
  p               <- round(stats::pchisq(q = cdiff, df = dfdiff, lower.tail = FALSE), 100) # Calculating the p value of the model
  Nagelkerke      <- rcompanion::nagelkerke(fit = regLog1, null = NULL, restrictNobs = FALSE)  # Calculating the explained variance
  NagelkerkePrint <- paste0(100 * round(Nagelkerke$Pseudo.R.squared.for.model.vs.null[3], 4), "%") # Extracting the explained variance

  Hoslem          <- ResourceSelection::hoslem.test(x = regLog1$y, y = fitted(regLog1), g = 10)  # Calculating the significance of the accuracy
  hoslemStatistic <- round(Hoslem$statistic, 2)
  hoslemP         <- round(Hoslem$p.value, 2)
  binaryCorrect   <- ifelse(regLog1$fitted.values > 0.5, 1, 0)                        # Creating a vector of 1 and 0 (by the probabilities of each ID to be 1, and the Classification value)
  Prediction      <- table(log_data$new_com, binaryCorrect)                                                    # Creating a table with the predicted values and the actual DV values
  Accuracy        <- paste0(round((Prediction[1, 1] + Prediction[2, 2]) / sum(Prediction) * 100, 2), "%")   # Calculating the Accuracy
  Sensitivity     <- paste0(round(Prediction[2, 2] / (Prediction[2, 2] + Prediction[1, 1]) * 100, 2), "%")  # Calculating the sensitivity
  Specificity     <- paste0(round(Prediction[1, 1] / (Prediction[1, 1] + Prediction[1, 2]) * 100, 2), "%")  # Calculating the specificity

CT(log_data$new_com, log_data$who_first)  
CT(log_data$new_com, log_data$answer_first)  
CT(log_data$new_com, paste0(log_data$who_first, '_',log_data$answer_first))   


```



```{r}




two_way_data_METI %>% 
  group_by(group) %>% 
  summarise(M = round(mean(measure), 2)) # %>%
  arrange(M)

two_way_data_METI %>% 
  group_by(Dr_answer , Dr_position, doc_lay) %>% 
  summarise(M = round(mean(measure), 2))  %>%  
  arrange(M)

two_way_data_METI$Dr_answer=as.factor(two_way_data_METI$Dr_answer)
two_way_data_METI$Dr_position=as.factor(two_way_data_METI$Dr_position)
two_way_data_METI$doc_lay=as.factor(two_way_data_METI$doc_lay)
contrasts(two_way_data_METI$Dr_answer)[1]=-1
contrasts(two_way_data_METI$Dr_position)[1]=-1
contrasts(two_way_data_METI$doc_lay)[1]=-1
model <- lme4::lmer(measure ~ Dr_answer * Dr_position * doc_lay + (1 | Q1 ), data = two_way_data_METI)
vif(model)

two_way_data_METI %>% 
  group_by(who_first , answer_first, measure_time) %>% 
  summarise(M = round(mean(measure), 2)) %>%  
  arrange(M)  


meti_1 <-   ezANOVA(two_way_data_METI, wid = Q1, within = .(doc_lay), between = .(Dr_answer, Dr_position), dv = measure, type = 3, white.adjust = FALSE)




    two_way_data_METI %>% 
  ggplot(aes(x = group, y = measure, fill = doc_lay , color = Answer)) +
 # geom_violin(alpha = 0, aes(color = Dr_answer)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.2, linewidth = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
scale_fill_manual(values = c("grey", "green")) + 
scale_color_manual(values = c("red", "blue")) + 
      
          ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  ggtitle('METI 3') + 
  # facet_grid(~measure_time) +
  Theme
  
  
  two_way_data_METI %>% 
  ggplot(aes(x = who_first, y = measure, fill = answer_first )) +
 # geom_violin(alpha = 0, aes(color = Dr_answer)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.2, linewidth = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
    scale_fill_manual(values = c("grey", "green")) + 
scale_color_manual(values = c("red", "blue")) + 
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  ggtitle('METI 3') + 
  facet_grid(~measure_time) +
  Theme
  
  
    two_way_data_METI %>% 
  ggplot(aes(x = Dr_answer, y = measure, fill = Dr_position )) +
 # geom_violin(alpha = 0, aes(color = Dr_answer)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "black", width = 0.2, linewidth = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
      scale_fill_manual(values = c("grey", "green")) + 
scale_color_manual(values = c("red", "blue")) + 
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  ggtitle('METI 3') + 
  facet_grid(~doc_lay) +
  Theme
  

   
   
   
 two_way_analysis_gap(Data_3$doc_minus_lay_expertise)
 two_way_analysis_gap(Data_3$doc_minus_lay_integrity)
 two_way_analysis_gap(Data_3$doc_minus_lay_benevolence)
    
    
```

calculating the gap between the doc and the lay, than to do 2 Dr position * 2 Dr asnwer
